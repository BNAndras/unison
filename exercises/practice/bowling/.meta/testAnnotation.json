[
  {
     "test_code":"bowling.test.ex1 = let\n\ttest.label \"should be able to score a game with all zeros\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] === Right (0))",
     "name":"bowling.test.ex1"
  },
  {
     "test_code":"bowling.test.ex2 = let\n\ttest.label \"should be able to score a game with no strikes or spares\" <| test.expect (score [3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6] === Right (90))",
     "name":"bowling.test.ex2"
  },
  {
     "test_code":"bowling.test.ex3 = let\n\ttest.label \"a spare followed by zeros is worth ten points\" <| test.expect (score [6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] === Right (10))",
     "name":"bowling.test.ex3"
  },
  {
     "test_code":"bowling.test.ex4 = let\n\ttest.label \"points scored in the roll after a spare are counted twice\" <| test.expect (score [6,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] === Right (16))",
     "name":"bowling.test.ex4"
  },
  {
     "test_code":"bowling.test.ex5 = let\n\ttest.label \"consecutive spares each get a one roll bonus\" <| test.expect (score [5,5,3,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] === Right (31))",
     "name":"bowling.test.ex5"
  },
  {
     "test_code":"bowling.test.ex6 = let\n\ttest.label \"a spare in the last frame gets a one roll bonus that is counted once\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,3,7] === Right (17))",
     "name":"bowling.test.ex6"
  },
  {
     "test_code":"bowling.test.ex7 = let\n\ttest.label \"a strike earns ten points in a frame with a single roll\" <| test.expect (score [10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] === Right (10))",
     "name":"bowling.test.ex7"
  },
  {
     "test_code":"bowling.test.ex8 = let\n\ttest.label \"points scored in the two rolls after a strike are counted twice as a bonus\" <| test.expect (score [10,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] === Right (26))",
     "name":"bowling.test.ex8"
  },
  {
     "test_code":"bowling.test.ex9 = let\n\ttest.label \"consecutive strikes each get the two roll bonus\" <| test.expect (score [10,10,10,5,3,0,0,0,0,0,0,0,0,0,0,0,0] === Right (81))",
     "name":"bowling.test.ex9"
  },
  {
     "test_code":"bowling.test.ex10 = let\n\ttest.label \"a strike in the last frame gets a two roll bonus that is counted once\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,7,1] === Right (18))",
     "name":"bowling.test.ex10"
  },
  {
     "test_code":"bowling.test.ex11 = let\n\ttest.label \"rolling a spare with the two roll bonus does not get a bonus roll\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,7,3] === Right (20))",
     "name":"bowling.test.ex11"
  },
  {
     "test_code":"bowling.test.ex12 = let\n\ttest.label \"strikes with the two roll bonus do not get bonus rolls\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10] === Right (30))",
     "name":"bowling.test.ex12"
  },
  {
     "test_code":"bowling.test.ex13 = let\n\ttest.label \"last two strikes followed by only last bonus with non strike points\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,1] === Right (31))",
     "name":"bowling.test.ex13"
  },
  {
     "test_code":"bowling.test.ex14 = let\n\ttest.label \"a strike with the one roll bonus after a spare in the last frame does not get a bonus\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,3,10] === Right (20))",
     "name":"bowling.test.ex14"
  },
  {
     "test_code":"bowling.test.ex15 = let\n\ttest.label \"all strikes is a perfect game\" <| test.expect (score [10,10,10,10,10,10,10,10,10,10,10,10] === Right (300))",
     "name":"bowling.test.ex15"
  },
  {
     "test_code":"bowling.test.ex16 = let\n\ttest.label \"two bonus rolls after a strike in the last frame can score more than 10 points if one is a strike\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,6] === Right (26))",
     "name":"bowling.test.ex16"
  },
  {
     "test_code":"bowling.test.ex17 = let\n\ttest.label \"an unstarted game cannot be scored\" <| test.expect (score [] === Left ( Error \"Score cannot be taken until the end of the game\"))",
     "name":"bowling.test.ex17"
  },
  {
     "test_code":"bowling.test.ex18 = let\n\ttest.label \"an incomplete game cannot be scored\" <| test.expect (score [0,0] === Left ( Error \"Score cannot be taken until the end of the game\"))",
     "name":"bowling.test.ex18"
  },
  {
     "test_code":"bowling.test.ex19 = let\n\ttest.label \"bonus rolls for a strike in the last frame must be rolled before score can be calculated\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10] === Left ( Error \"Score cannot be taken until the end of the game\"))",
     "name":"bowling.test.ex19"
  },
  {
     "test_code":"bowling.test.ex20 = let\n\ttest.label \"both bonus rolls for a strike in the last frame must be rolled before score can be calculated\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10] === Left ( Error \"Score cannot be taken until the end of the game\"))",
     "name":"bowling.test.ex20"
  },
  {
     "test_code":"bowling.test.ex21 = let\n\ttest.label \"bonus roll for a spare in the last frame must be rolled before score can be calculated\" <| test.expect (score [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,3] === Left ( Error \"Score cannot be taken until the end of the game\"))",
     "name":"bowling.test.ex21"
  }
]
